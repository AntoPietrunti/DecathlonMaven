# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Decathlon CI Matrix

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main]
  release:
    branches: [ main ]

jobs:

  build:
    name: Build and test for ${{ matrix.os }} and Java ${{ matrix.java }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        java: [ 11, 17 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
          cache: maven
      - name: Print environment
        run: |
          echo "OS: ${{ matrix.os}}"
          echo "Java version: ${{ matrix.java }}"
          java --version
          mvn --version
      - name: Build and test with Maven for ${{ matrix.os}} and Java ${{ matrix.java }}
        run: |
          mvn -B package --file pom.xml

  checkstyle:

    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Checkstyle with Maven
        run: mvn checkstyle:check

  PMD:

    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: PMD with Maven
        run: mvn pmd:pmd

  spotbugs:

    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Spotbugs with Maven
        run: mvn spotbugs:check
  
  release:

    runs-on: ubuntu-latest

    needs: [ build, checkstyle, PMD, spotbugs ]
    strategy: 
      fail-fast: false 
      matrix:
        java: [ 11, 17 ]

    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
          cache: maven
      - name: Print environment
        run: |
          echo "Java version: ${{ matrix.java }}"
          java --version
          mvn --version
      - name: Build and test with Maven for ${{ matrix.os}} and Java ${{ matrix.java }}
        run: mvn -B package --file pom.xml
      - name: Prepare upload
        shell: bash
        run: |
          cp ./target/decathlon-${{ github.event.release.tag_name }}.jar ./decathlon-java-${{ matrix.java }}.jar      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          path: ./decathlon-java-${{ matrix.java }}.jar
          name: decathlon-java-${{ matrix.java }}
      - name: Release
        if: github.event_name == 'release' && (github.event.action == 'published')
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ github.event.release.upload_url }}
            asset_path: ./decathlon-java-${{ matrix.java }}.jar
            asset_name: decathlon-java-${{ matrix.java }}.jar
            asset_content_type: application/jar